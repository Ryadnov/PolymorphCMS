<div class="dark-blue-head">
    {{ Admin.link('Добавить блок +', 'blocks/add', {'catPk':cat.pk}, {'class':'add-block'}) }}
</div>

{{ this.widget('CTreeView', {'collapsed':true,'data':blocks, 'id':'blocks'}, true) }}
<script type="text/javascript">
$(document).ready(function() {

    $('#blocks li.widget-link a').click(function() {
        $('#widget-details').load($(this).attr('href'));
        return false;
    }).asc({
        linkClass: 'add-widgets-btn'
    }).asc({
        linkClass: 'make-own-btn',
        isStatic: true,
        buttons: {
            "Да" : function() {
                var $t = $('#blocks .make-own-btn'),
                    url = $t.attr('href'),
                    res = '';

                for(var a in $(this))
                    res += a+' = '+$(this)[a]+"</br>\n";
                alert($(this).attr('id'));
                return false;
                //make own and reload tab
                $.get(url, {}, function(data) {
                    if (data == 'ok')
                        $('#block-tabs').tabs('load', 0);
                });

                $(this).dialog("close");
            },
            "Отмена" : function() {
                $(this).dialog("close");
            }
        }
    }).asc({
        linkClass: 'add-block',
        success: function() {
           $('#block-tabs').tabs('load', 0);
        }
    });

    $("#blocks").sortable({
        helper: "clone",
        opacity: 0.6,
        scroll: true,

        stop: function(event, ui) {
            alert(event.type);
        }
    });

    $("#blocks ul").sortable({
        connectWith: "#blocks ul",
        helper: "clone",
        opacity: 0.6,
        scroll: true,

        stop: function(event, ui) {
            var blocks = $("#blocks > li"),
                objects = [];
            blocks.each(function() {
                var id = $(this).attr('id').split('_')[1],
                    data = $(this).children('ul').sortable('serialize');
                objects.push($.post('/admin/blocks/saveWidgetsPosition?blockPk='+id+'&'+data));
            });
            
            //array to $.when using apply, see http://jsfiddle.net/YNGcm/21/
            $.when.apply(null, objects).then(function() {
                $("#block-tabs").tabs('load', $("#block-tabs").tabs('option', 'selected'));
            });
        }
    });

    //delete blocks
    $("#trash").droppable({
        drop: function(e, ui) {
            var params = $(ui.draggable).attr("id").split('_'),
                type = params[0],
                pk = params[1],
                url;

            if (type == 'widgets') {
                url = "/admin/widgets/delete";
            } else if (type == 'blocks') {
                url = "/admin/blocks/delete"
            }

            $.get(url, {pk : pk}, function() {
                $(ui.draggable).remove();
            });
        },
        hoverClass: "accept"
    });

//	$('.widget-link').each(function() {
//        var $t = $(this),
//            blockPk = $t.closest('li').attr('id').split('_')[1];
//
//        $t.sortable({
//            stop: function() {
//                $.post('/admin/blocks/saveWidgetsPosition?blockPk='+blockPk,
//                    $t.sortable('serialize')
//                );
//            }
//        });
//    });
});
</script>
